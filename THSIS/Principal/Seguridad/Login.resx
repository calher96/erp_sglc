<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ptb_Carga.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>